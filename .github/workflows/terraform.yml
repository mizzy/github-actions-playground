name: terraform
on:
  push:
    branches:
    - master
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    # Checkout the repository to the GitHub Actions runner
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Setup Terraform
      env:
        VERSION: 0.12.24
      run: >-
        curl -fsSLo terraform.zip
        https://releases.hashicorp.com/terraform/${VERSION}/terraform_${VERSION}_linux_amd64.zip
        &&  sudo unzip -o terraform.zip -d /usr/local/bin

    - name: Setup tfnotify
      env:
        VERSION: 0.6.0
      run: >-
        curl -fsSLo tfnotify.tar.gz
        https://github.com/mercari/tfnotify/releases/download/v${VERSION}/tfnotify_linux_amd64.tar.gz
        && sudo tar -xf tfnotify.tar.gz -C /usr/local/bin tfnotify

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: ./scripts/terraform.sh fmt

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: ./scripts/terraform.sh plan
    
      # On push to master, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: ./scripts/terraform.sh apply
